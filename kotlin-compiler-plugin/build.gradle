buildscript {
  ext.kotlin_version = '1.3.21'


  repositories {
    jcenter()
  }
  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    classpath 'com.github.jengelman.gradle.plugins:shadow:5.0.0'

  }

  allprojects {
    repositories {
      mavenLocal()
      jcenter()
    }
  }
}
version = "0.0.1"

apply plugin: "org.jetbrains.kotlin.jvm"
apply plugin: "kotlin-kapt"
apply plugin: "maven"
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'maven-publish'

compileKotlin {
  kotlinOptions {
    jvmTarget = "1.8"
    freeCompilerArgs = ['-Xskip-runtime-version-check', 'true']
  }
}

group = "de.jensklingenberg"
archivesBaseName = "kotlin-compiler-plugin"
version = "0.0.1"


dependencies {
  compile project(':compiler-plugin-shared')

  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
  compileOnly "org.jetbrains.kotlin:kotlin-compiler-embeddable:$kotlin_version"

  compileOnly "com.google.auto.service:auto-service:1.0-rc4"
  kapt "com.google.auto.service:auto-service:1.0-rc4"
}



task fatJar(type: Jar) {
  manifest {
    attributes 'Implementation-Title': 'Gradle Jar File Example',
            'Implementation-Version': version,
            'Main-Class': 'de.jensklingenberg.CommonComponentRegistrar'
  }
  baseName = project.name
  from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
  with jar
}

uploadArchives {
  repositories {
    mavenDeployer {
      repository(url: uri("${System.getProperty('user.home')}/.m2/repository"))
    }
  }
}

shadowJar {
  manifest {
    inheritFrom project.tasks.fatJar.manifest
  }
  baseName = project.name
  version = "0.0.1"
  classifier = null
}

publishing {
  publications {
    shadow(MavenPublication) { publication ->
      project.shadow.component(publication)
    }
  }
  repositories {
    maven {
      url = uri("${System.getProperty('user.home')}/.m2/repository")
    }
  }
}



build.finalizedBy(uploadArchives)


kapt {
  includeCompileClasspath = true
}


